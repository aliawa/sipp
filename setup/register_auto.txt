# ---------------------------------------------------------------
#                B2BUA REGISTER CLIENT TESTING
# ---------------------------------------------------------------
#  1. Successful registration.
#  2. Re-register after registration interval expires.
#  3. Keeps registering on error responses.
#  4. Keeps registering on no response.
#  5. Backoff algorithm on No response:  T1, 2T1, 4T1, 8T1, 8T1, 8T1, 8T1, 8T1, 8T1, 8T1
#  6. Backoff algorithm on error responses/timeot: 6,12,24,24,24,...
#  7. Backoff algorithm on repeated 401, 407 or 423: 150ms,6s,12s,24s,24s,...
#  8. Honors Min-Interval value in 423 Interval too brief responses.
#  9. Honors Retry-After value in error responses.
# 10. Handle 1XX provisional responses to REGISTER
# 11. Handle malformed or missing:
#         WWW-Authenticate in 401
#         Proxy-Authenticate in 407
#         Min-Expires in 423
# 12. Check Expires Header present and has correct value.
# 13. Understands both Expires header and "expires" parameter



# uas
../sipp_latest -i $SADDR -p $SPORT1 -sf uas_register_auto.sf -inf reg_auto.dat -trace_logs -deadcall_wait 0


# 4600 config
ewn download register_auto_4552.conf1 192.168.1.190
ewn restore register_auto_4552.conf1


# Analyze
# Run the test for 400 seconds
# Get the log file generated by the scenario: uas_register_auto_<pid>_logs.log
# Analyze the log file using register_auto_analyze.awk
# catlog prints the name of the generated log file
awk -f register_auto_analyze.awk uas_register_auto_<pid>_logs.log 






